import { type RobbSong } from "../robbPlayer";

const song: RobbSong = {
  tracks: [
    [ // track 0
      0x24, 0x25, 0x24, 0x26, 0x27, 0x24, 0x26, 0x28,
      0x28, 0xff,
    ],
    [ // track 1
      0x29, 0xff,
    ],
    [ // track 2
      0x20, 0x20, 0x22, 0x21, 0x20, 0x23, 0x23, 0x23,
      0x23, 0xff,
    ],
  ],
  patterns: [
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { offset: 0, bytes: [] },  // (not referenced)
    { // pattern $20 (32)
      offset: 3475,
      bytes: [
        0x87, 0x02, 0x15, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x15, 0x07, 0x15, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x15, 0x07, 0x13, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x13, 0x07, 0x13, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x13, 0x07, 0x1a, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x1a, 0x07, 0x1a, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x1a, 0x07, 0x1c, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x1c, 0x07, 0x1c, 0x83, 0x03, 0x2e, 0x83, 0x02,
        0x1c, 0xff,
      ],
    },
    { // pattern $21 (33)
      offset: 3508,
      bytes: [
        0x07, 0x1a, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1a,
        0x07, 0x1a, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1a,
        0x07, 0x1c, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1c,
        0x07, 0x1c, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1c,
        0xff,
      ],
    },
    { // pattern $22 (34)
      offset: 3541,
      bytes: [
        0x07, 0x1e, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1e,
        0x07, 0x1e, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1e,
        0x07, 0x19, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x19,
        0x07, 0x19, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x19,
        0xff,
      ],
    },
    { // pattern $23 (35)
      offset: 3574,
      bytes: [
        0x07, 0x15, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x15,
        0x07, 0x15, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x15,
        0x07, 0x1a, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1a,
        0x07, 0x1c, 0x83, 0x03, 0x2e, 0x83, 0x02, 0x1c,
        0xff,
      ],
    },
    { // pattern $24 (36)
      offset: 3607,
      bytes: [
        0x97, 0x08, 0x3d, 0x07, 0x3b, 0x03, 0x3e, 0x07,
        0x3d, 0x07, 0x3b, 0x0b, 0x3d, 0x17, 0x39, 0x07,
        0x39, 0xff,
      ],
    },
    { // pattern $25 (37)
      offset: 3625,
      bytes: [
        0x03, 0x39, 0x07, 0x38, 0x0b, 0x36, 0x03, 0x38,
        0x03, 0x39, 0xff,
      ],
    },
    { // pattern $26 (38)
      offset: 3636,
      bytes: [
        0x03, 0x39, 0x07, 0x38, 0x07, 0x36, 0x0b, 0x34,
        0xff,
      ],
    },
    { // pattern $27 (39)
      offset: 3645,
      bytes: [
        0x17, 0x34, 0x03, 0x36, 0x03, 0x39, 0x07, 0x39,
        0x0f, 0x38, 0x03, 0x39, 0x03, 0x3b, 0x07, 0x3d,
        0x0f, 0x3b, 0x03, 0x3d, 0x03, 0x3e, 0x07, 0x3e,
        0x07, 0x3d, 0x07, 0x3b, 0x07, 0x39, 0xff,
      ],
    },
    { // pattern $28 (40)
      offset: 3676,
      bytes: [
        0x1f, 0x39, 0x43, 0x03, 0x32, 0x03, 0x34, 0x03,
        0x32, 0x03, 0x39, 0x03, 0x38, 0x03, 0x34, 0x03,
        0x3b, 0x1f, 0x39, 0x43, 0x03, 0x32, 0x03, 0x34,
        0x03, 0x32, 0x03, 0x39, 0x03, 0x38, 0x03, 0x34,
        0x03, 0x32, 0xff,
      ],
    },
    { // pattern $29 (41)
      offset: 3711,
      bytes: [
        0x83, 0x09, 0x2d, 0x03, 0x34, 0x03, 0x39, 0x03,
        0x34, 0x03, 0x39, 0x03, 0x39, 0x03, 0x34, 0x03,
        0x39, 0xff,
      ],
    },
  ],
  instruments: [
    undefined,
    undefined,
    { // instrument $02 (2)
      pulseWidthLo:   0x52,
      pulseWidthHi:   0x01,
      controlReg:     0x41,
      attackDecay:    0x09,
      sustainRelease: 0x9f,
      vibratoDepth:   0x00,
      pulseSpeed:     0x16,
      fx:             0x08,
    },
    { // instrument $03 (3)
      pulseWidthLo:   0x00,
      pulseWidthHi:   0x02,
      controlReg:     0x81,
      attackDecay:    0x0a,
      sustainRelease: 0x09,
      vibratoDepth:   0x00,
      pulseSpeed:     0x00,
      fx:             0x05,
    },
    undefined,
    undefined,
    undefined,
    undefined,
    { // instrument $08 (8)
      pulseWidthLo:   0xb4,
      pulseWidthHi:   0x08,
      controlReg:     0x41,
      attackDecay:    0x49,
      sustainRelease: 0x5b,
      vibratoDepth:   0x02,
      pulseSpeed:     0x03,
      fx:             0x08,
    },
    { // instrument $09 (9)
      pulseWidthLo:   0x00,
      pulseWidthHi:   0x08,
      controlReg:     0x21,
      attackDecay:    0x04,
      sustainRelease: 0x6f,
      vibratoDepth:   0x03,
      pulseSpeed:     0x00,
      fx:             0x05,
    },
  ],
  slowness: 3,
  freqs: [
    0x0116, 0x0127, 0x0138, 0x014b,
    0x015f, 0x0173, 0x018a, 0x01a1,
    0x01ba, 0x01d4, 0x01f0, 0x020e,
    0x022d, 0x024e, 0x0271, 0x0296,
    0x02bd, 0x02e7, 0x0313, 0x0342,
    0x0374, 0x03a9, 0x03e0, 0x041b,
    0x045a, 0x049b, 0x04e2, 0x052c,
    0x057b, 0x05ce, 0x0627, 0x0685,
    0x06e8, 0x0751, 0x07c1, 0x0837,
    0x08b4, 0x0937, 0x09c4, 0x0a57,
    0x0af5, 0x0b9c, 0x0c4e, 0x0d09,
    0x0dd0, 0x0ea3, 0x0f82, 0x106e,
    0x1168, 0x126e, 0x1388, 0x14af,
    0x15eb, 0x1739, 0x189c, 0x1a13,
    0x1ba1, 0x1d46, 0x1f04, 0x20dc,
    0x22d0, 0x24dc, 0x2710, 0x295e,
    0x2bd6, 0x2e72, 0x3138, 0x3426,
    0x3742, 0x3a8c, 0x3e08, 0x41b8,
    0x45a0, 0x49b8, 0x4e20, 0x52bc,
    0x57ac, 0x5ce4, 0x6270, 0x684c,
    0x6e84, 0x7518, 0x7c10, 0x8370,
    0x8b40, 0x9370, 0x9c40, 0xa578,
    0xaf58, 0xb9c8, 0xc4e0, 0xd098,
    0xdd08, 0xea30, 0xf820, 0xfd2e,
    0x0700, 0x000e, 0x0000, 0x0300,
    0x0b0b, 0x0105, 0x9705, 0x0703,
    0x2141, 0x3d41, 0x1539, 0x0908,
    0xff02, 0x4603, 0x2101, 0x03ff,
    0x0046, 0x2522, 0x0001, 0x0000,
    0x0000, 0x0100, 0x0302, 0x0302,
    0x0040, 0x1624, 0xdc03, 0xa946,
    0x0000, 0x0800, 0x56e0, 0xff00,
  ],
};

export default song;
